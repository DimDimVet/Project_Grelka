#include "PWR.h"

void Init_Tim_PWR(PWR_Structure* pwr)
{
		Enable_Periphery_PWR(pwr);
		Enable_GPIO_PWR();
    /*Устанавливаем предделитель и авто-перезагрузку*/
    Write_REG(pwr->TIMx->PSC,TIM_PRESCALE); /*делитель TIM prescaler*/
    Write_REG(pwr->TIMx->ARR,COUNT_RESET); /*автосброс*/

    /*ШИМ TIM3_CH1 PA6*/
    Write_REG(pwr->TIMx->CCR1,pwr->fill_Factor); /*Коэффициент заполнения*/
    ENABLE_BIT(pwr->TIMx->CCMR1,TIM_MODE_PWR1); /*режим ШИМ TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1*/

    ENABLE_BIT(pwr->TIMx->CCMR1, TIM_CCMR1_OC1PE);/*включен регистр предварительной загрузки*/
    ENABLE_BIT(pwr->TIMx->CCER, TIM_CCER_CC1E); /*включаем TIM3_CH1*/

    ENABLE_BIT(pwr->TIMx->CR1, TIM_CR1_CEN);/*Запуск таймера*/
}

void Replace_Fill_Factor(PWR_Structure* pwr)
{
	Write_REG(pwr->TIMx->CCR1,pwr->fill_Factor); /*Коэффициент заполнения*/
}

void Enable_Periphery_PWR(PWR_Structure* pwr)
{
	AHB1_ENABLE_PERIPHERY(RCC_AHB1ENR_GPIOAEN);/*выход PWR для TIM3*/
	/*RM0090 Reference manual на STM32F407/417*/
	if(pwr->TIMx == TIM1)
	{
		APB2_ENABLE_PERIPHERY(RCC_APB2ENR_TIM1EN);
		APB2_ENABLE_PERIPHERY(RCC_APB2ENR_TIM1EN);
	return;
	}/*GPIOA,GPIOE*/
	
	if(pwr->TIMx == TIM8){APB2_ENABLE_PERIPHERY(RCC_APB2ENR_TIM8EN);return;}/*GPIOA,GPIOB,GPIOC*/
	if(pwr->TIMx == TIM9){APB2_ENABLE_PERIPHERY(RCC_APB2ENR_TIM9EN);return;}/*GPIOA,GPIOE*/
	if(pwr->TIMx == TIM10){APB2_ENABLE_PERIPHERY(RCC_APB2ENR_TIM10EN);return;}/*GPIOB,GPIOF*/
	if(pwr->TIMx == TIM11){APB2_ENABLE_PERIPHERY(RCC_APB2ENR_TIM11EN);return;}/*GPIOB,GPIOF*/
	
	if(pwr->TIMx == TIM2){APB1_ENABLE_PERIPHERY(RCC_APB1ENR_TIM2EN);return;}/*GPIOA,GPIOB*/
	if(pwr->TIMx == TIM3){APB1_ENABLE_PERIPHERY(RCC_APB1ENR_TIM3EN);return;}/*GPIOA,GPIOB,GPIOC*/
	if(pwr->TIMx == TIM4){APB1_ENABLE_PERIPHERY(RCC_APB1ENR_TIM4EN);return;}/*GPIOB,GPIOD*/
	if(pwr->TIMx == TIM5){APB1_ENABLE_PERIPHERY(RCC_APB1ENR_TIM5EN);return;}/*GPIOA,GPIOH*/
	if(pwr->TIMx == TIM12){APB1_ENABLE_PERIPHERY(RCC_APB1ENR_TIM12EN);return;}/*GPIOB*/
	if(pwr->TIMx == TIM13){APB1_ENABLE_PERIPHERY(RCC_APB1ENR_TIM13EN);return;}/*GPIOA,GPIOF*/
	if(pwr->TIMx == TIM14){APB1_ENABLE_PERIPHERY(RCC_APB1ENR_TIM14EN);return;}/*GPIOA,GPIOF*/

}

void Enable_GPIO_PWR()
{
	  GPIO_Structure pwr_6 = {.GPIOx = GPIOA,.Pin = PIN6,.Mode = GPIO_MODE_AF,.Speed = GPIO_SPEED_LOW,.Alternate = GPIO_AF2};
    GPIO_Init(&pwr_6);
}

